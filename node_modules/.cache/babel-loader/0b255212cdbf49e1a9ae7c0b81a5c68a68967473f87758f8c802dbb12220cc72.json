{"ast":null,"code":"var _jsxFileName = \"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/App.tsx\";\nimport React from 'react';\nimport go from 'gojs';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst members = [{\n  firstName: 'Кабаков',\n  lastName: 'Александр',\n  id: '1'\n}, {\n  firstName: 'Агеев',\n  lastName: 'Евгений',\n  id: '2'\n}];\nfunction initDiagram() {\n  const $ = go.GraphObject.make;\n  // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n  const diagram = $(go.Diagram, {\n    'undoManager.isEnabled': true,\n    // must be set to allow for model change listening\n    // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n    'clickCreatingTool.archetypeNodeData': {\n      text: 'new node',\n      color: 'lightblue'\n    },\n    model: new go.GraphLinksModel({\n      linkKeyProperty: 'key' // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n    })\n  });\n\n  // define a simple Node template\n  diagram.nodeTemplate = $(go.Node, 'Auto',\n  // the Shape will go around the TextBlock\n  new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify), $(go.Shape, 'RoundedRectangle', {\n    name: 'SHAPE',\n    fill: 'white',\n    strokeWidth: 0\n  },\n  // Shape.fill is bound to Node.data.color\n  new go.Binding('fill', 'color')), $(go.TextBlock, {\n    margin: 8,\n    editable: true\n  },\n  // some room around the text\n  new go.Binding('text').makeTwoWay()));\n  return diagram;\n}\nfunction App() {\n  const myDiagram = new go.Diagram(\"myDiagramDiv\",\n  // create a Diagram for the HTML Div element\n  {\n    \"undoManager.isEnabled\": true\n  }); // enable undo & redo\n\n  // define a simple Node template\n  myDiagram.nodeTemplate = new go.Node(\"Auto\") // the Shape will automatically surround the TextBlock\n  // add a Shape and a TextBlock to this \"Auto\" Panel\n  .add(new go.Shape(\"RoundedRectangle\", {\n    strokeWidth: 0,\n    fill: \"white\"\n  }) // no border; default fill is white\n  .bind(\"fill\", \"color\")) // Shape.fill is bound to Node.data.color\n  .add(new go.TextBlock({\n    margin: 8,\n    stroke: \"#333\"\n  }) // some room around the text\n  .bind(\"text\", \"key\")); // TextBlock.text is bound to Node.data.key\n\n  // but use the default Link template, by not setting Diagram.linkTemplate\n\n  // create the model data that will be represented by Nodes and Links\n  myDiagram.model = new go.GraphLinksModel([{\n    key: \"Alpha\",\n    color: \"lightblue\"\n  }, {\n    key: \"Beta\",\n    color: \"orange\"\n  }, {\n    key: \"Gamma\",\n    color: \"lightgreen\"\n  }, {\n    key: \"Delta\",\n    color: \"pink\"\n  }], [{\n    from: \"Alpha\",\n    to: \"Beta\"\n  }, {\n    from: \"Alpha\",\n    to: \"Gamma\"\n  }, {\n    from: \"Beta\",\n    to: \"Beta\"\n  }, {\n    from: \"Gamma\",\n    to: \"Delta\"\n  }, {\n    from: \"Delta\",\n    to: \"Alpha\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(ReactDiagram, {\n        initDiagram: initDiagram,\n        divClassName: \"diagram-component\",\n        nodeDataArray: [{\n          key: 0,\n          text: 'Alpha',\n          color: 'lightblue',\n          loc: '0 0'\n        }, {\n          key: 1,\n          text: 'Beta',\n          color: 'orange',\n          loc: '150 0'\n        }, {\n          key: 2,\n          text: 'Gamma',\n          color: 'lightgreen',\n          loc: '0 150'\n        }, {\n          key: 3,\n          text: 'Delta',\n          color: 'pink',\n          loc: '150 150'\n        }],\n        linkDataArray: [{\n          key: -1,\n          from: 0,\n          to: 1\n        }, {\n          key: -2,\n          from: 0,\n          to: 2\n        }, {\n          key: -3,\n          from: 1,\n          to: 1\n        }, {\n          key: -4,\n          from: 2,\n          to: 3\n        }, {\n          key: -5,\n          from: 3,\n          to: 0\n        }],\n        onModelChange: handleModelChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","go","jsxDEV","_jsxDEV","members","firstName","lastName","id","initDiagram","$","GraphObject","make","diagram","Diagram","text","color","model","GraphLinksModel","linkKeyProperty","nodeTemplate","Node","Binding","Point","parse","makeTwoWay","stringify","Shape","name","fill","strokeWidth","TextBlock","margin","editable","App","myDiagram","add","bind","stroke","key","from","to","className","children","ReactDiagram","divClassName","nodeDataArray","loc","linkDataArray","onModelChange","handleModelChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/20294784/Documents/coding/hackaton-2023-frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport go from 'gojs';\n\nimport './App.css';\nimport {BoxPreview} from \"./components/Box/BoxPreview\";\n\nconst members = [\n    {firstName: 'Кабаков', lastName: 'Александр', id: '1'},\n    {firstName: 'Агеев', lastName: 'Евгений', id: '2'},\n];\n\nfunction initDiagram() {\n    const $ = go.GraphObject.make;\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n    const diagram =\n        $(go.Diagram,\n            {\n                'undoManager.isEnabled': true,  // must be set to allow for model change listening\n                // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n                'clickCreatingTool.archetypeNodeData': { text: 'new node', color: 'lightblue' },\n                model: new go.GraphLinksModel(\n                    {\n                        linkKeyProperty: 'key'  // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n                    })\n            });\n\n    // define a simple Node template\n    diagram.nodeTemplate =\n        $(go.Node, 'Auto',  // the Shape will go around the TextBlock\n            new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify),\n            $(go.Shape, 'RoundedRectangle',\n                { name: 'SHAPE', fill: 'white', strokeWidth: 0 },\n                // Shape.fill is bound to Node.data.color\n                new go.Binding('fill', 'color')),\n            $(go.TextBlock,\n                { margin: 8, editable: true },  // some room around the text\n                new go.Binding('text').makeTwoWay()\n            )\n        );\n\n    return diagram;\n}\n\n\nfunction App() {\n    const myDiagram =\n        new go.Diagram(\"myDiagramDiv\",  // create a Diagram for the HTML Div element\n            { \"undoManager.isEnabled\": true });  // enable undo & redo\n\n// define a simple Node template\n    myDiagram.nodeTemplate =\n        new go.Node(\"Auto\")  // the Shape will automatically surround the TextBlock\n            // add a Shape and a TextBlock to this \"Auto\" Panel\n            .add(new go.Shape(\"RoundedRectangle\",\n                { strokeWidth: 0, fill: \"white\" })  // no border; default fill is white\n                .bind(\"fill\", \"color\"))  // Shape.fill is bound to Node.data.color\n            .add(new go.TextBlock({ margin: 8, stroke: \"#333\" })  // some room around the text\n                .bind(\"text\", \"key\"));  // TextBlock.text is bound to Node.data.key\n\n// but use the default Link template, by not setting Diagram.linkTemplate\n\n// create the model data that will be represented by Nodes and Links\n    myDiagram.model = new go.GraphLinksModel(\n        [\n            { key: \"Alpha\", color: \"lightblue\" },\n            { key: \"Beta\", color: \"orange\" },\n            { key: \"Gamma\", color: \"lightgreen\" },\n            { key: \"Delta\", color: \"pink\" }\n        ],\n        [\n            { from: \"Alpha\", to: \"Beta\" },\n            { from: \"Alpha\", to: \"Gamma\" },\n            { from: \"Beta\", to: \"Beta\" },\n            { from: \"Gamma\", to: \"Delta\" },\n            { from: \"Delta\", to: \"Alpha\" }\n        ]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          {/*<BoxPreview title={'Команда'} type={'team'} id={'1'} leader={'Chanov'} members={members} />*/}\n          <ReactDiagram\n              initDiagram={initDiagram}\n              divClassName='diagram-component'\n              nodeDataArray={[\n                  { key: 0, text: 'Alpha', color: 'lightblue', loc: '0 0' },\n                  { key: 1, text: 'Beta', color: 'orange', loc: '150 0' },\n                  { key: 2, text: 'Gamma', color: 'lightgreen', loc: '0 150' },\n                  { key: 3, text: 'Delta', color: 'pink', loc: '150 150' }\n              ]}\n              linkDataArray={[\n                  { key: -1, from: 0, to: 1 },\n                  { key: -2, from: 0, to: 2 },\n                  { key: -3, from: 1, to: 1 },\n                  { key: -4, from: 2, to: 3 },\n                  { key: -5, from: 3, to: 0 }\n              ]}\n              onModelChange={handleModelChange}\n          />\n      </header>\n        <main>\n\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}