{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const {\n  reducer,\n  reducerPath,\n  middleware,\n  useGetProductDTOQuery\n} = createApi({\n  reducerPath: \"PRODUCT\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3000\"\n  }),\n  endpoints: builder => ({\n    getProductDTO: builder.query({\n      query: () => ({\n        method: \"GET\",\n        url: `/data`\n      })\n    })\n  })\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","reducer","reducerPath","middleware","useGetProductDTOQuery","baseQuery","baseUrl","endpoints","builder","getProductDTO","query","method","url"],"sources":["/Users/20294784/Documents/coding/hackaton-2023-frontend/src/services/api/index.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport interface User {\n  login: string;\n  lastName: string;\n  firstName: string;\n  middleName: string;\n  phone: string;\n  email: string;\n}\n\nexport interface Team {\n  name: string;\n  users: User[];\n}\n\nexport interface ProductComponent {\n  name: string;\n  ci: string;\n  repoLink: string;\n  stack: string[];\n}\ninterface ProductDTO {\n  name: string;\n  products: [];\n  components: ProductComponent[];\n  team: Team;\n}\nexport const { reducer, reducerPath, middleware, useGetProductDTOQuery } =\n  createApi({\n    reducerPath: \"PRODUCT\",\n    baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3000\" }),\n    endpoints: (builder) => ({\n      getProductDTO: builder.query<ProductDTO, void>({\n        query: () => ({\n          method: \"GET\",\n          url: `/data`,\n        }),\n      }),\n    }),\n  });\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AA4BxE,OAAO,MAAM;EAAEC,OAAO;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAsB,CAAC,GACtEL,SAAS,CAAC;EACRG,WAAW,EAAE,SAAS;EACtBG,SAAS,EAAEL,cAAc,CAAC;IAAEM,OAAO,EAAE;EAAwB,CAAC,CAAC;EAC/DC,SAAS,EAAGC,OAAO,KAAM;IACvBC,aAAa,EAAED,OAAO,CAACE,KAAK,CAAmB;MAC7CA,KAAK,EAAEA,CAAA,MAAO;QACZC,MAAM,EAAE,KAAK;QACbC,GAAG,EAAG;MACR,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}