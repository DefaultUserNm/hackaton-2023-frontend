{"ast":null,"code":"import _toConsumableArray from\"/Users/20294784/Documents/coding/hackaton-2023-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{configureStore}from\"@reduxjs/toolkit\";import{reducer}from\"./reducer\";import{middleware as apiMiddleware}from'../services/api';export var store=configureStore({reducer:reducer,middleware:function middleware(getDefaultMiddleware){return[].concat(_toConsumableArray(getDefaultMiddleware()),[apiMiddleware]);}});","map":{"version":3,"names":["configureStore","reducer","middleware","apiMiddleware","store","getDefaultMiddleware","concat","_toConsumableArray"],"sources":["/Users/20294784/Documents/coding/hackaton-2023-frontend/src/app/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport { reducer } from \"./reducer\";\nimport { middleware as apiMiddleware } from '../services/api'\n\nexport const store = configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => [...getDefaultMiddleware(), apiMiddleware],\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"],"mappings":"qJAAA,OAASA,cAAc,KAA6B,kBAAkB,CACtE,OAASC,OAAO,KAAQ,WAAW,CACnC,OAASC,UAAU,GAAI,CAAAC,aAAa,KAAQ,iBAAiB,CAE7D,MAAO,IAAM,CAAAC,KAAK,CAAGJ,cAAc,CAAC,CAClCC,OAAO,CAAPA,OAAO,CACPC,UAAU,CAAE,SAAAA,WAACG,oBAAoB,WAAAC,MAAA,CAAAC,kBAAA,CAASF,oBAAoB,CAAC,CAAC,GAAEF,aAAa,IACjF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}