[{"/Users/20294784/Documents/coding/uppm-pl/src/index.tsx":"1","/Users/20294784/Documents/coding/uppm-pl/src/reportWebVitals.ts":"2","/Users/20294784/Documents/coding/uppm-pl/src/App.tsx":"3","/Users/20294784/Documents/coding/uppm-pl/src/app/store.ts":"4","/Users/20294784/Documents/coding/uppm-pl/src/features/counter/counterSlice.ts":"5","/Users/20294784/Documents/coding/uppm-pl/src/features/counter/Counter.tsx":"6","/Users/20294784/Documents/coding/uppm-pl/src/features/counter/counterAPI.ts":"7","/Users/20294784/Documents/coding/uppm-pl/src/app/hooks.ts":"8","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/index.tsx":"9","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/reportWebVitals.ts":"10","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/App.tsx":"11","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/app/store.ts":"12","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxTeam/BoxTeamPreview.tsx":"13","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxRelease/BoxReleasePreview.tsx":"14","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxMetric/BoxMetricPreview.tsx":"15","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxComponent/BoxComponentPreview.tsx":"16","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxPreview.tsx":"17","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxComponent/index.ts":"18","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxComponent/BoxComponentDetail.tsx":"19","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/BootstrapDialogTitle.tsx":"20","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/services/api/index.ts":"21","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/app/reducer.ts":"22"},{"size":687,"mtime":1686823104549,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1686823104550,"results":"25","hashOfConfig":"24"},{"size":270,"mtime":1686825843025,"results":"26","hashOfConfig":"24"},{"size":447,"mtime":1686823104546,"results":"27","hashOfConfig":"24"},{"size":3092,"mtime":1686823104549,"results":"28","hashOfConfig":"24"},{"size":2077,"mtime":1686825203139,"results":"29","hashOfConfig":"24"},{"size":214,"mtime":1686823104548,"results":"30","hashOfConfig":"24"},{"size":350,"mtime":1686823104546,"results":"31","hashOfConfig":"24"},{"size":687,"mtime":1686852251362,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":1686852251389,"results":"34","hashOfConfig":"33"},{"size":2067,"mtime":1686858844116,"results":"35","hashOfConfig":"33"},{"size":382,"mtime":1686858512583,"results":"36","hashOfConfig":"33"},{"size":1878,"mtime":1686852251227,"results":"37","hashOfConfig":"33"},{"size":161,"mtime":1686838309445,"results":"38","hashOfConfig":"33"},{"size":163,"mtime":1686838309441,"results":"39","hashOfConfig":"33"},{"size":3504,"mtime":1686858779158,"results":"40","hashOfConfig":"33"},{"size":1129,"mtime":1686852251177,"results":"41","hashOfConfig":"33"},{"size":120,"mtime":1686852251109,"results":"42","hashOfConfig":"33"},{"size":80,"mtime":1686852251081,"results":"43","hashOfConfig":"33"},{"size":760,"mtime":1686853765911,"results":"44","hashOfConfig":"33"},{"size":900,"mtime":1686858562174,"results":"45","hashOfConfig":"33"},{"size":247,"mtime":1686858479334,"results":"46","hashOfConfig":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"d4ibjc",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"14jx6aa",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/20294784/Documents/coding/uppm-pl/src/index.tsx",[],[],[],"/Users/20294784/Documents/coding/uppm-pl/src/reportWebVitals.ts",[],[],"/Users/20294784/Documents/coding/uppm-pl/src/App.tsx",["120"],[],"/Users/20294784/Documents/coding/uppm-pl/src/app/store.ts",[],[],"/Users/20294784/Documents/coding/uppm-pl/src/features/counter/counterSlice.ts",[],[],"/Users/20294784/Documents/coding/uppm-pl/src/features/counter/Counter.tsx",["121","122","123","124"],[],"import React, {useEffect, useState} from 'react';\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\nimport axios from \"axios\";\n\nconst getData = async () => axios.get('http://localhost:3000/posts').then((r) => r.data);\n\nexport function Counter() {\n  const [data, setData] = useState([]);\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  // useEffect(() => {\n  //   getData().then((r) => setData(r.data))\n  // }, []);\n\n  // console.log({data});\n  console.log('render');\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","/Users/20294784/Documents/coding/uppm-pl/src/features/counter/counterAPI.ts",[],[],"/Users/20294784/Documents/coding/uppm-pl/src/app/hooks.ts",[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/index.tsx",[],[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/reportWebVitals.ts",[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/App.tsx",["125","126","127","128"],[],"import React, { useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { BoxPreview } from \"./components/Box/BoxPreview\";\nimport ReactFlow from \"reactflow\";\n\nimport \"./App.css\";\n\nimport \"reactflow/dist/style.css\";\nimport { BoxComponentPreview } from \"./components/Box/BoxComponent\";\nimport { useGetProductDTOQuery } from \"./services/api\";\n\nconst components = [\n  { name: \"BH\", count: 3 },\n  { name: \"PL\", count: 2 },\n];\n\nconst initialNodes = [\n  { id: \"1\", position: { x: 0, y: 0 }, data: { label: \"Первый\" } },\n  { id: \"2\", position: { x: 0, y: 100 }, data: { label: \"Второй\" } },\n];\nconst initialEdges = [{ id: \"e1-2\", source: \"1\", target: \"2\" }];\n\nconst members = [\n  { firstName: \"Кабаков\", lastName: \"Александр\", id: \"1\" },\n  { firstName: \"Агеев\", lastName: \"Евгений\", id: \"2\" },\n  { firstName: \"Алёна\", lastName: \"Непряхина\", id: \"3\" },\n];\n\nfunction App() {\n  // const { data } = api.endpoints.getPosts.useQuery();\n  // const [updatePost, { data }] = api.endpoints.updatePost.useMutation();\n  // const { data, isError, isSuccess, isLoading } = useGetProductDTOQuery();\n\n  useEffect(() => {\n    // console.log({data});\n\n  }, []);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*<div style={{ width: '100vw', height: '100vh' }}>*/}\n        {/*    <ReactFlow nodes={initialNodes} edges={initialEdges} />*/}\n        {/*</div>*/}\n        <Grid container spacing={3} direction=\"column\">\n          <Grid item>\n            <BoxPreview\n              title={\"Команда\"}\n              type={\"team\"}\n              id={\"1\"}\n              leader={\"Чанов Владимир\"}\n              members={members}\n              total={3}\n            />\n          </Grid>\n          <Grid item>\n            <BoxComponentPreview\n              total={10}\n              title={\"Компоненты\"}\n              productComponents={components}\n            />\n          </Grid>\n        </Grid>\n      </header>\n      <main></main>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/app/store.ts",[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxTeam/BoxTeamPreview.tsx",["129"],[],"import React, { FC } from \"react\";\nimport {\n  Card,\n  CardActions,\n  Container,\n  CardContent,\n  Typography,\n  Button,\n  Avatar,\n  Grid,\n} from \"@mui/material\";\nimport { deepOrange, deepPurple } from \"@mui/material/colors\";\n\nimport { TeamMember } from \"../BoxPreview\";\n\ninterface BoxTeamProps {\n  leader?: string;\n  members?: TeamMember[];\n  title: string;\n  total?: number;\n}\nexport const BoxTeamPreview: FC<BoxTeamProps> = ({\n  leader,\n  members,\n  title,\n  total,\n}) => {\n  return (\n    <Container>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h2\" color=\"text.secondary\">\n            {title}\n          </Typography>\n          <Typography\n            variant=\"h4\"\n            textAlign=\"left\"\n            component=\"div\"\n            gutterBottom\n          >\n            Лидер: {leader}\n          </Typography>\n          <Typography\n            variant=\"h4\"\n            component=\"div\"\n            textAlign=\"left\"\n            gutterBottom\n          >\n            Количество человек: {total}\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Typography variant=\"h4\" component=\"div\" textAlign=\"left\">\n                Состав:\n              </Typography>\n            </Grid>\n            {members?.length &&\n              members.map(({ lastName, firstName, id }) => (\n                <Grid item key={id} style={{ display: \"flex\" }}>\n                  <Avatar\n                    sx={{ bgcolor: deepOrange[500], width: 64, height: 64 }}\n                  >\n                    {lastName[0]}\n                    {firstName[0]}\n                  </Avatar>\n                </Grid>\n              ))}\n          </Grid>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\">Подробнее</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n};\n","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxRelease/BoxReleasePreview.tsx",["130"],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxMetric/BoxMetricPreview.tsx",["131"],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxComponent/BoxComponentPreview.tsx",["132","133","134","135","136"],[],"import CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport * as React from \"react\";\nimport { FC } from \"react\";\nimport { ProductComponent } from \"../BoxPreview\";\nimport {\n  Avatar,\n  Container,\n  Grid,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n} from \"@mui/material\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { BootstrapDialogTitle } from \"../../BootstrapDialogTitle\";\n\ninterface BoxComponentPreviewProps {\n  productComponents?: ProductComponent[];\n  total?: number;\n  title: string;\n}\nexport const BoxComponentPreview: FC<BoxComponentPreviewProps> = ({\n  title,\n  total,\n  productComponents,\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Container>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h2\" color=\"text.secondary\">\n            {title}\n          </Typography>\n          <Grid container spacing={2}>\n            {productComponents?.length &&\n              productComponents.map((productComponent) => (\n                <Grid item key={productComponent.name}>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"large\"\n                    onClick={handleClickOpen}\n                  >\n                    {productComponent.name}\n                  </Button>\n                  <Dialog\n                    onClose={handleClose}\n                    aria-labelledby=\"customized-dialog-title\"\n                    open={open}\n                  >\n                    <BootstrapDialogTitle\n                      id=\"customized-dialog-title\"\n                      onClose={handleClose}\n                    >\n                      Modal title\n                    </BootstrapDialogTitle>\n                    <DialogContent dividers>\n                      <Typography gutterBottom>\n                        Cras mattis consectetur purus sit amet fermentum. Cras\n                        justo odio, dapibus ac facilisis in, egestas eget quam.\n                        Morbi leo risus, porta ac consectetur ac, vestibulum at\n                        eros.\n                      </Typography>\n                      <Typography gutterBottom>\n                        Praesent commodo cursus magna, vel scelerisque nisl\n                        consectetur et. Vivamus sagittis lacus vel augue laoreet\n                        rutrum faucibus dolor auctor.\n                      </Typography>\n                      <Typography gutterBottom>\n                        Aenean lacinia bibendum nulla sed consectetur. Praesent\n                        commodo cursus magna, vel scelerisque nisl consectetur\n                        et. Donec sed odio dui. Donec ullamcorper nulla non\n                        metus auctor fringilla.\n                      </Typography>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button autoFocus onClick={handleClose}>\n                        Save changes\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </Grid>\n              ))}\n          </Grid>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxPreview.tsx",[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxComponent/index.ts",[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/Box/BoxComponent/BoxComponentDetail.tsx",["137","138"],[],"import React, { FC } from \"react\";\n\nexport const BoxComponentDetail = () => {};\n","/Users/20294784/Documents/coding/hackaton-2023-frontend/src/components/BootstrapDialogTitle.tsx",[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/services/api/index.ts",[],[],"/Users/20294784/Documents/coding/hackaton-2023-frontend/src/app/reducer.ts",[],[],{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":12},{"ruleId":"139","severity":1,"message":"143","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"144","line":15,"column":7,"nodeType":"141","messageId":"142","endLine":15,"endColumn":14},{"ruleId":"139","severity":1,"message":"145","line":18,"column":10,"nodeType":"141","messageId":"142","endLine":18,"endColumn":14},{"ruleId":"139","severity":1,"message":"146","line":18,"column":16,"nodeType":"141","messageId":"142","endLine":18,"endColumn":23},{"ruleId":"139","severity":1,"message":"147","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":17},{"ruleId":"139","severity":1,"message":"148","line":10,"column":10,"nodeType":"141","messageId":"142","endLine":10,"endColumn":31},{"ruleId":"139","severity":1,"message":"149","line":17,"column":7,"nodeType":"141","messageId":"142","endLine":17,"endColumn":19},{"ruleId":"139","severity":1,"message":"150","line":21,"column":7,"nodeType":"141","messageId":"142","endLine":21,"endColumn":19},{"ruleId":"139","severity":1,"message":"151","line":12,"column":22,"nodeType":"141","messageId":"142","endLine":12,"endColumn":32},{"ruleId":"139","severity":1,"message":"152","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"152","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"153","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":17},{"ruleId":"139","severity":1,"message":"154","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":19},{"ruleId":"139","severity":1,"message":"155","line":11,"column":3,"nodeType":"141","messageId":"142","endLine":11,"endColumn":9},{"ruleId":"139","severity":1,"message":"156","line":16,"column":3,"nodeType":"141","messageId":"142","endLine":16,"endColumn":14},{"ruleId":"139","severity":1,"message":"157","line":19,"column":10,"nodeType":"141","messageId":"142","endLine":19,"endColumn":20},{"ruleId":"139","severity":1,"message":"152","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"158","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":19},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'getData' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'ReactFlow' is defined but never used.","'useGetProductDTOQuery' is defined but never used.","'initialNodes' is assigned a value but never used.","'initialEdges' is assigned a value but never used.","'deepPurple' is defined but never used.","'React' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'DialogTitle' is defined but never used.","'deepOrange' is defined but never used.","'FC' is defined but never used."]